modifiers:
  c2:
    type: JVMArg
    val: "-XX:-TieredCompilation -Xcomp"
    excludes:
      # These two benchmarks exit with code 1
      dacapochopin-29a657f:
        - tradebeans
        - tradesoap
      dacapochopin-f480064:
        - tradebeans
        - tradesoap
  c2_noxcomp:
    type: JVMArg
    val: "-XX:-TieredCompilation"
    excludes:
      # These two benchmarks exit with code 1
      dacapochopin-29a657f:
        - tradebeans
        - tradesoap
      dacapochopin-f480064:
        - tradebeans
        - tradesoap
  c2ins:
    type: JVMArg
    val: "-XX:-TieredCompilation"
    excludes:
      # These two benchmarks exit with code 1
      dacapochopin-29a657f:
        - tradebeans
        - tradesoap
      dacapochopin-f480064:
        - tradebeans
        - tradesoap
  probes_cp:
    type: JVMClasspath
    val: "/home/wenyuz/MMTk-Dev/evaluation/probes /home/wenyuz/MMTk-Dev/evaluation/probes/probes.jar"
  probes:
    type: JVMArg
    val: "-Djava.library.path=/home/wenyuz/MMTk-Dev/evaluation/probes -Dprobes=RustMMTk"
  jvmti:
    type: JVMArg
    val: "-agentpath:/home/wenyuz/MMTk-Dev/evaluation/probes/libperf_statistics.so"
  jvmti_env:
    type: EnvVar
    var: "LD_PRELOAD"
    val: "/home/wenyuz/MMTk-Dev/evaluation/probes/libperf_statistics.so"
  jvmti_pauses:
    type: JVMArg
    val: "-agentpath:/home/wenyuz/MMTk-Dev/evaluation/probes/libperf_statistics_with_pauses.so"
  jvmti_env_pauses:
    type: EnvVar
    var: "LD_PRELOAD"
    val: "/home/wenyuz/MMTk-Dev/evaluation/probes/libperf_statistics_with_pauses.so"
  perf:
    type: EnvVar
    var: "PERF_EVENTS"
    # AMD
    val: "PERF_COUNT_HW_CPU_CYCLES,PERF_COUNT_HW_INSTRUCTIONS,PERF_COUNT_HW_CACHE_L1D:MISS,PERF_COUNT_HW_CACHE_DTLB:MISS"
    # Intel
    # val: "PERF_COUNT_HW_CACHE_LL:MISS,PERF_COUNT_HW_CPU_CYCLES,PERF_COUNT_HW_INSTRUCTIONS,PERF_COUNT_HW_CACHE_L1D:MISS,PERF_COUNT_HW_CACHE_DTLB:MISS"
  pretouch:
    type: JVMArg
    val: "-XX:+AlwaysPreTouch"
  tph_perf:
    type: ModifierSet
    val: "tph|mmtk_perf"
  hs_perf:
    type: ModifierSet
    val: "jvmti|jvmti_env|perf"
  hs:
    type: ModifierSet
    val: "jvmti|jvmti_env"
  hs_pauses:
    type: ModifierSet
    val: "jvmti_pauses|jvmti_env_pauses"
  mmtk_perf:
    type: EnvVar
    var: "MMTK_PHASE_PERF_EVENTS"
    # AMD
    val: "PERF_COUNT_HW_CPU_CYCLES,0,-1;PERF_COUNT_HW_INSTRUCTIONS,0,-1;PERF_COUNT_HW_CACHE_L1D:MISS,0,-1;PERF_COUNT_HW_CACHE_DTLB:MISS,0,-1"
    # Intel
    # val: "PERF_COUNT_HW_CACHE_LL:MISS,0,-1;PERF_COUNT_HW_CPU_CYCLES,0,-1;PERF_COUNT_HW_INSTRUCTIONS,0,-1;PERF_COUNT_HW_CACHE_L1D:MISS,0,-1;PERF_COUNT_HW_CACHE_DTLB:MISS,0,-1"
  hugetlb:
    type: JVMArg
    val: "-XX:+UseTransparentHugePages"
  barrier:
    type: EnvVar
    var: "BARRIER"
    val: "{0}"
  threads:
    type: EnvVar
    var: "MMTK_THREADS"
    val: "{0}"
  ms:
    type: JVMArg
    val: "-XX:MetaspaceSize=1G -XX:+DisableExplicitGC -XX:-UseBiasedLocking"
  mn:
    type: JVMArg
    val: "-Xmn{0} -XX:SurvivorRatio=32 -XX:-UseAdaptiveSizePolicy"
  no_inline_clone:
    type: JVMArg
    val: "-XX:+UnlockDiagnosticVMOptions -XX:-InlineObjectCopy"
  no_weak_and_class_unload:
    type: JVMArg
    val: "-XX:-ClassUnloading -XX:-ClassUnloadingWithConcurrentMark -XX:-RegisterReferences"
  no_cls_unload_cm:
    type: JVMArg
    val: "-XX:-ClassUnloadingWithConcurrentMark"
  common_noxcomp_noserver:
    type: ModifierSet
    val: "ms|c2_noxcomp|probes|probes_cp|no_inline_clone"
  common_noxcomp:
    type: ModifierSet
    val: "ms|s|c2_noxcomp|probes|probes_cp|no_inline_clone"
  common:
    type: ModifierSet
    val: "ms|s|c2|probes|probes_cp|no_inline_clone|no_weak_and_class_unload"
  commonins:
    type: ModifierSet
    val: "ms|c2ins|probes|probes_cp|no_inline_clone"
  common2:
    type: ModifierSet
    val: "ms|s|c2|probes|probes_cp"
  nogc:
    type: EnvVar
    var: "MMTK_PLAN"
    val: "NoGC"
  ix:
    type: EnvVar
    var: "MMTK_PLAN"
    val: "Immix"
  gencopy:
    type: EnvVar
    var: "MMTK_PLAN"
    val: "GenCopy"
  mc:
    type: EnvVar
    var: "MMTK_PLAN"
    val: "MarkCompact"
  epsilon:
    type: ModifierSet
    val: "hotspot_gc-Epsilon|no_weak_and_class_unload"
  g1_default:
    type: JVMArg
    val: "-XX:+UseG1GC"
  g1:
    type: ModifierSet
    val: "hotspot_gc-G1|no_weak_and_class_unload"
  z:
    type: ModifierSet
    val: "hotspot_gc-Z|no_weak_and_class_unload"
  shenandoah:
    type: ModifierSet
    val: "hotspot_gc-Shenandoah|no_weak_and_class_unload"
  parallel:
    type: ModifierSet
    val: "hotspot_gc-Parallel|no_weak_and_class_unload"
  g1r:
    type: JVMArg
    val: "-XX:G1HeapRegionSize={0}"
  tlab:
    type: JVMArg
    val: "-XX:TLABSize={0} -XX:-ResizeTLAB"
  hs_cgc:
    type: JVMArg
    val: "-XX:ConcGCThreads={0}"

# final minheap values
#  _ features used for G1, LXR
